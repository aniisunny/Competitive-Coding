Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:

Any left parenthesis '(' must have a corresponding right parenthesis ')'.
Any right parenthesis ')' must have a corresponding left parenthesis '('.
Left parenthesis '(' must go before the corresponding right parenthesis ')'.
'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.
An empty string is also valid.
Example 1:
Input: "()"
Output: True
Example 2:
Input: "(*)"
Output: True
Example 3:
Input: "(*))"
Output: True


Solution:-
class Solution {
    public boolean checkValidString(String s) {
        
        int min = 0, max = 0;
        for(char c : s.toCharArray()) {
            min += c == '(' ? 1 : -1;
            max += c != ')' ? 1 : -1;
            if(max < 0) break;
            if(min < 0) min = 0;
        }
        
        return min == 0;
    }
}